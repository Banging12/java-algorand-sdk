/*
 * Algod REST API.
 * API Endpoint for AlgoD Operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is a touched-up version of models generated by swagger-codegen from algod's spec.
 */

package com.algorand.algosdk.algod.model;

import java.util.List;
import java.util.ArrayList;

import org.apache.commons.lang3.ObjectUtils;
import com.google.gson.annotations.SerializedName;

/**
 * Note that we annotate this as a model so that legacy clients can directly import a swagger generated Version model.
 */
public class Version {

  @SerializedName("genesis_id")
  private String genesisId = null;

  @SerializedName("versions")
  private List<String> versions = new ArrayList<>();
  public Version genesisId(String genesisId) {
    this.genesisId = genesisId;
    return this;
  }

  

  /**
  * Get genesisId
  * @return genesisId
  **/
  public String getGenesisId() {
    return genesisId;
  }
  public void setGenesisId(String genesisId) {
    this.genesisId = genesisId;
  }
  public Version versions(List<String> versions) {
    this.versions = versions;
    return this;
  }

  public Version addVersionsItem(String versionsItem) {
    this.versions.add(versionsItem);
    return this;
  }

  /**
  * Get versions
  * @return versions
  **/
  public List<String> getVersions() {
    return versions;
  }
  public void setVersions(List<String> versions) {
    this.versions = versions;
  }
  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    Version version = (Version) o;
    return ObjectUtils.equals(this.genesisId, version.genesisId) &&
    ObjectUtils.equals(this.versions, version.versions);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(genesisId, versions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Version {\n");
    
    sb.append("    genesisId: ").append(toIndentedString(genesisId)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
