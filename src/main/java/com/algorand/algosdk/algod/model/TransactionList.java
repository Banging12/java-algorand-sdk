/*
 * Algod REST API.
 * API Endpoint for AlgoD Operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is a touched-up version of models generated by swagger-codegen from algod's spec.
 */

package com.algorand.algosdk.algod.model;

import java.util.List;
import java.util.ArrayList;

import org.apache.commons.lang3.ObjectUtils;
import com.google.gson.annotations.SerializedName;

/**
 * TransactionList contains a list of transactions
 */
public class TransactionList {

  @SerializedName("transactions")
  private List<Transaction> transactions = new ArrayList<>();
  public TransactionList transactions(List<Transaction> transactions) {
    this.transactions = transactions;
    return this;
  }

  public TransactionList addTransactionsItem(Transaction transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

  /**
  * TransactionList is a list of transactions
  * @return transactions
  **/
  public List<Transaction> getTransactions() {
    return transactions;
  }
  public void setTransactions(List<Transaction> transactions) {
    this.transactions = transactions;
  }
  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    TransactionList transactionList = (TransactionList) o;
    return ObjectUtils.equals(this.transactions, transactionList.transactions);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(transactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionList {\n");
    
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
